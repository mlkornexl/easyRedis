% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/logger.R
\name{redis_logger}
\alias{redis_logger}
\alias{layout.redis}
\alias{appender.redis}
\alias{redis_logger}
\title{Logging to Redis Database}
\usage{
layout.redis(ApplicationId, ApplicationInstanceId)

appender.redis(channel, logToConsole = FALSE)

redis_logger(ApplicationId, ApplicationInstanceId,
  channel = redis_options("logChannel"), logToConsole = FALSE)
}
\arguments{
\item{ApplicationId}{string, unique ID of the logging application}

\item{ApplicationInstanceId}{string, unique ID of the single instance of
the logging application}

\item{channel}{Redis channel to publish logging messages}

\item{logToConsole}{logical, if \code{TRUE} logging message is written to
console too}
}
\value{
\code{layout.redis} returns a function with arguments \code{level},
    \code{msg}, and additional arguments \code{...}, see Layout section and
    \code{\link[futile.logger]{flog.layout}} for details.

\code{appender.redis} returns a function with one argument
    \code{line} that publishes the logging message to the Redis channel
    \code{channel} and optionally writes it to the console
    (\code{\link[base]{stdout}()}).
}
\description{
The functions define logging environment for writing log messages to
the Redis data base using \pkg{futile.logger}'s logging facilities
}
\section{Functions}{
\itemize{
\item \code{layout.redis}: defines logging message's layout, see Layout
section for details

\item \code{appender.redis}: defines a logging appender to publish logging
messages to a Redis data base channel \code{channel}

\item \code{redis_logger}: defines a new logger \code{redis} and sets
layout and appender to the return values of \code{layout.redis()} and
\code{appender.redis()}, respectively.
}}

\section{Layout}{

    The logging message is a JSON string with two elements at the base level
    \describe{
        \item{\code{Metadata}}{contains \code{ApplicationId} and
            \code{ApplicationInstanceId}}
        \item{\code{LoggingDocument}}{contains a list of message specific
            elements}
    }

    Both meta data \code{ApplicationId} and \code{ApplicationInstanceId}
    must be supplied. If missing the respective \link[=redis_options]{redis
    options} will be used.

    The \code{level} argument in the returned function will control the
    layout of the \code{LoggingDocument} list. Additional arguments
    \code{...} either set list elements of \code{LoggingDocument} directly
    (if present) or will be coerced to a "details" JSON-string.
}

\seealso{
\code{\link[futile.logger]{flog.layout}} for managing layouts in
    \pkg{futile.logger} package

\code{\link[futile.logger]{flog.appender}} for managing logging
    appenders in \pkg{futile.logger} package

\code{\link[futile.logger]{flog.logger}} for managing loggers in
    \pkg{futile.logger} package
}
