% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loadConfig.R
\name{redis_loadConfig}
\alias{redis_loadConfig}
\alias{redis_readConfigFile}
\alias{.auto_load}
\title{Load Config-Files to Redis Cache}
\usage{
redis_loadConfig(file, append = FALSE)

redis_readConfigFile(file)

.auto_load(expr, parent)
}
\arguments{
\item{file}{character vector of file names (a single file name for
\code{redis_readConfigFile})}

\item{append}{logical, if \code{TRUE} config settings will be appended to
existing settings (if any). Duplicate settings will be overwritten.}

\item{expr}{character string, expression to evaluate, see Auto-Load section
for details}

\item{parent}{environment, parent environment for the environment in which
\code{expr} will be evaluated}
}
\value{
a list of configuration settings
}
\description{
The function loads config data, stored as JSON-strings in config files to
the Redis cache.
}
\section{Data Format}{

All config files must contain data in JSON format. Basic elements of the
data structure at top level are
\describe{
    \item{\code{key}}{\emph{mandatory}, unique key to store and access data
        in the Redis cache}
    \item{\code{value}}{\emph{mandatory}, data object containing a list of
        key-value pairs. This can be any list of named data. There is one
        \emph{mandatory} element: \code{id}. This is a unique identifier of
        the data. It will be matched to \code{key} and no key must be
        assigned to one or more \code{id}s (e.g. from multiple
        config-files)}
    \item{\code{auto_load}}{\emph{optional}, an auto load obejct, i.e. a
        list of key-value pairs, see Auto Load section for details.}
}

For loading a minimal config file, see Examples.
}

\section{Auto-Load}{

The \code{auto_load} section of the config settings contains a named list
of R expressions, e.g.
\preformatted{"auto_load": {
    "date": "Sys.Date()"
}}
will set the config value \code{date} to the current date (using
\code{\link[base]{Sys.Date}()}). Use \code{"::"} to preface the function
with the package name (just like in plain R). A single colon \code{:} can
be used to preface the expression with a file name (i.e. anything
that ends with \code{".R"} or \code{".r"}), that will be sourced
before the expression will be evaluated.

If file name is provided without any expression, variable \code{value} as
defined by the script will be returned.

All expressions (and the sourcing of the R-script, in case a file name is
provided) will be evaluated in an separate environment with parent
environment \code{parent}.

Function \code{redis_readConfigFile}, that calls \code{.auto_load} will set
\code{parent} to a new environment containing all non-auto-load config
settings. The parent environment of this is set to
\code{\link[base]{.GlobalEnv}}. Thus all config settings and any object
within the global search path will be available for execution of
\code{expr}.

Function \code{redis_readConfigFile} further sets the working directory
temporarily to the config file's base directory, i.e. all relative paths
in a file name will be with respect to this directory.
}

\examples{
\dontrun{
## show template for minimal configuration file
file <- system.file('templates/minimal.cfg', package = 'easyRedis')
cat(stringr::str_c(readLines(file), collapse = '\\n'))

## *** SET UP AN OPEN REDIS-CONNECTION FIRST! ***
config <- redis_loadConfig(file)

key <- attr(config, 'key')

redis_getConfig(key)

## *** CLEAR REDIS KEY! ***
rredis::redisDelete(key)
}

}
\references{
see \url{https://en.wikipedia.org/wiki/JSON} for details on
    JSON file format
}
